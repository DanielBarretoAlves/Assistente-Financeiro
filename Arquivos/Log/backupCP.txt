private bool readAgenda()
        {
            String st = "";
            using (var sr = new StreamReader(@"Arquivos/agenda" + nomeCarteira + ".json"))
            {
                st += sr.ReadToEnd();

            }
            agenda = JsonConvert.DeserializeObject<Mes[]>(st);
            return true;
        }

        //TODO: Write Agenda

        private bool writeAgenda()
        {
            var json_serializado = JsonConvert.SerializeObject(agenda);
            File.WriteAllText(@"Arquivos/agenda" + nomeCarteira + ".json", json_serializado);
            return (File.Exists(@"Arquivos/agenda" + nomeCarteira + ".json"));
        }

        //TODO: CheckAgenda

        private void updateAgenda()
        {
            if (File.Exists(@"Arquivos/agenda" + nomeCarteira + ".json"))
            {
                readAgenda();
            }
            else
            {
                for (int i = 0; i < 12; i++)
                {
                    Console.WriteLine("i: " + i);
                    Mes m = new Mes(i, nomeCarteira);
                    agenda[i] = m;
                }
                writeAgenda();
            }
        }



        private int getGastosTamanho()
        {
            int tamanho = 0;
            for (int i = 0; i < gastos.Length; i++)
            {
                if (gastos[i] != null)
                {
                    tamanho++;
                }
            }
            return tamanho;
        }


        public bool addRenda(Renda r)
        {
            expandirRenda();

            for (int i = 0; i < rendas.Length; i++)
            {
                if (rendas[i] == null)
                {
                    rendas[i] = r;
                    escreverRenda();
                    return true;
                }
            }
            return false;
        }

        public bool addGasto(Gasto g)
        {
            expandirGasto();

            agenda[g.Mes].addGasto(g);
            Console.WriteLine("O Tipo: " + g.Tipo);
            Console.WriteLine(g.Tipo > 1);
            if (g.Tipo > 1)
            {
                int goal = g.Mes + g.Tipo;
                int current = g.Mes + 1;
                
                while (current < goal)
                {
                    
                    agenda[current].addGasto(g);
                    current++;
                }

            }
            return false;
        }

        public bool addSalario(Salario s)
        {
            expandirSalario();

            for (int i = 0; i < salarios.Length; i++)
            {
                if (salarios[i] == null)
                {
                    salarios[i] = s;
                    escreverSalario();
                    return true;
                }
            }
            return false;
        }

        public bool escreverGasto()
        {
            var json_serializado = JsonConvert.SerializeObject(gastos);
            File.WriteAllText(@"Arquivos/" + "gastos" + nomeCarteira + ".json", json_serializado);
            return (File.Exists(@"Arquivos/" + "gastos" + nomeCarteira + ".json"));
        }

        public bool lerGasto()
        {
            String st = "";
            using (var sr = new StreamReader(@"Arquivos/" + "gastos" + nomeCarteira + ".json"))
            {
                st += sr.ReadToEnd();

            }
            Gasto[] newGastos = JsonConvert.DeserializeObject<Gasto[]>(st);
            Console.WriteLine(newGastos[0].Nome);
            return true;
        }

        public bool escreverAgenda()
        {
            var json_serializado = JsonConvert.SerializeObject(agenda);
            File.WriteAllText(@"Arquivos/" + "agenda" + nomeCarteira + ".json", json_serializado);
            return (File.Exists(@"Arquivos/" + "agenda" + nomeCarteira + ".json"));
        }
        public bool escreverRenda()
        {
            var json_serializado = JsonConvert.SerializeObject(rendas);
            File.WriteAllText(@"Arquivos/" + "rendas" + nomeCarteira + ".json", json_serializado);
            return (File.Exists(@"Arquivos/" + "rendas" + nomeCarteira + ".json"));
        }

        public bool lerRenda()
        {
            String st = "";
            using (var sr = new StreamReader(@"Arquivos/" + "rendas" + nomeCarteira + ".json"))
            {
                st += sr.ReadToEnd();

            }
            Renda[] newRendas = JsonConvert.DeserializeObject<Renda[]>(st);
            Console.WriteLine(newRendas[0].Nome);
            return true;
        }

        public bool escreverSalario()
        {
            var json_serializado = JsonConvert.SerializeObject(salarios);
            File.WriteAllText(@"Arquivos/" + "salarios" + nomeCarteira + ".json", json_serializado);
            return (File.Exists(@"Arquivos/" + "salarios" + nomeCarteira + ".json"));
        }

        public bool lerSalario()
        {
            String st = "";
            using (var sr = new StreamReader(@"Arquivos/" + "salarios" + nomeCarteira + ".json"))
            {
                st += sr.ReadToEnd();

            }
            Salario[] newSalarios = JsonConvert.DeserializeObject<Salario[]>(st);
            Console.WriteLine(newSalarios[0].Nome);
            return true;
        }

        public void expandirGasto()
        {
            Gasto[] reserva = new Gasto[this.gastos.Length * 2];
            if (IsFull(gastos))
            {
                for (int i = 0; i < gastos.Length; i++)
                {
                    reserva[i] = gastos[i];
                }
                gastos = reserva;
            }

        }

        public void expandirRenda()
        {
            Renda[] reserva = new Renda[this.rendas.Length * 2];
            if (IsFull(rendas))
            {
                for (int i = 0; i < gastos.Length; i++)
                {
                    reserva[i] = rendas[i];
                }
                rendas = reserva;
            }
        }

        public void expandirSalario()
        {

            Salario[] reserva = new Salario[this.salarios.Length * 2];
            if (IsFull(salarios))
            {
                for (int i = 0; i < gastos.Length; i++)
                {
                    reserva[i] = salarios[i];
                }
                salarios = reserva;
            }

        }


        public bool IsFull(object[] dado)
        {
            int size = 0;
            //Somando a quantidade de casas do array oculpadas
            for (int i = 0; i < dado.Length; i++)
            {
                if (dado[i] != null)
                {
                    size++;
                }
            }
            if (dado.Length == size)
            {
                return true;
            }
            return false;
        }